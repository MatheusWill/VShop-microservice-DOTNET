// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VShop.ProductApi.Context;

#nullable disable

namespace VShop.ProductApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230612212958_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VShop.ProductApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 6, 12, 21, 29, 58, 556, DateTimeKind.Utc).AddTicks(5608),
                            ExternalId = "38b6037f-277b-4fc1-b34c-9cc322542cf3",
                            Name = "Material Escolar"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 6, 12, 21, 29, 58, 556, DateTimeKind.Utc).AddTicks(5611),
                            ExternalId = "4c72db6f-c9c0-4610-9592-0f041b1821f4",
                            Name = "Acessórios"
                        });
                });

            modelBuilder.Entity("VShop.ProductApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<long>("Stock")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 6, 12, 21, 29, 58, 556, DateTimeKind.Utc).AddTicks(6002),
                            Description = "Caderno grande 20 materias",
                            ExternalId = "81df80e9-6a19-482d-8d6e-022731f39e10",
                            ImageURL = "caderno.jpg",
                            Name = "Caderno 20 matérias",
                            Price = 20m,
                            Stock = 10L
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 6, 12, 21, 29, 58, 556, DateTimeKind.Utc).AddTicks(6019),
                            Description = "Estojo para lapis",
                            ExternalId = "bf50f072-a0a2-431b-871c-95e760e98f6a",
                            ImageURL = "Estojo.jpg",
                            Name = "Estojo",
                            Price = 5m,
                            Stock = 23L
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 6, 12, 21, 29, 58, 556, DateTimeKind.Utc).AddTicks(6021),
                            Description = "Prisilha para cabelo",
                            ExternalId = "fed4a23b-95a9-42b0-8bd0-9f6a25dbb774",
                            ImageURL = "Prisilha.jpg",
                            Name = "Prisilha",
                            Price = 1.50m,
                            Stock = 36L
                        });
                });

            modelBuilder.Entity("VShop.ProductApi.Models.Product", b =>
                {
                    b.HasOne("VShop.ProductApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VShop.ProductApi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
